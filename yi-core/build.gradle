

ext {
    generatedSourcesDir = file('src/main/generated')
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir generatedSourcesDir
        }
    }
}

dependencies {
    configurations {
        //all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        //all*.exclude group: 'ch.qos.logback'
        //all*.exclude group: 'log4j', module: 'log4j'
    }
    compile project(":yi-base")

//    compile('org.springframework.boot:spring-boot-starter-data-redis')
//    compile('org.springframework.boot:spring-boot-starter-data-solr')
    compile('org.springframework.boot:spring-boot-starter-validation')

    compile group: 'com.alibaba', name: 'druid-spring-boot-starter', version: '1.1.9'

    compile 'mysql:mysql-connector-java:5.1.46'
    
    compile 'com.google.zxing:core:3.3.3'

    compile("com.squareup.retrofit2:retrofit:2.3.0")
    compile("com.squareup.retrofit2:converter-gson:2.3.0")
    compile("com.squareup.retrofit2:adapter-rxjava2:2.3.0")
    compile('com.squareup.okhttp3:logging-interceptor:3.8.1')

    compileOnly('org.projectlombok:lombok')
    
    compileOnly 'javax.servlet:javax.servlet-api:4.0.1'
    
    // 测试依赖
    testCompile 'org.jboss.spec.javax.el:jboss-el-api_3.0_spec:1.0.9.Final'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

compileJava {
    dependsOn clean
    doFirst {
        generatedSourcesDir.mkdirs()
    }
    options.compilerArgs += ['-s', generatedSourcesDir]
}

clean {
    delete generatedSourcesDir
}
